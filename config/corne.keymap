/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define _AS(keycode) &as LS(keycode) keycode

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "Base";
                        bindings = <
//        ┌────────┬────────┬──────────┬────────┬───────────┐   ┌───────────┬────────┬────────────┬───────────┬────────────────┐
//        │ _AS(Q) │ _AS(W) │  _AS(E)  │ _AS(R) │  _AS(T)   │   │  _AS(Y)   │ _AS(U) │   _AS(I)   │  _AS(O)   │     _AS(P)     │
//        ├────────┼────────┼──────────┼────────┼───────────┤   ├───────────┼────────┼────────────┼───────────┼────────────────┤
//        │ _AS(A) │ _AS(S) │  _AS(D)  │ _AS(F) │  _AS(G)   │   │  _AS(H)   │ _AS(J) │   _AS(K)   │  _AS(L)   │ _AS(SEMICOLON) │
//        ├────────┼────────┼──────────┼────────┼───────────┤   ├───────────┼────────┼────────────┼───────────┼────────────────┤
//        │ _AS(Z) │ _AS(X) │  _AS(C)  │ _AS(V) │  _AS(B)   │   │  _AS(N)   │ _AS(M) │ _AS(COMMA) │ _AS (DOT) │   _AS(SLASH)   │
//        └────────┴────────┼──────────┼────────┼───────────┤   ├───────────┼────────┼────────────┼───────────┴────────────────┘
//                          │ &kp LALT │ &mo 1  │ &kp SPACE │   │ &kp SPACE │ &mo 2  │ &kp RSHIFT │                             
//                          └──────────┴────────┴───────────┘   └───────────┴────────┴────────────┘                             
      _AS(Q)   _AS(W)   _AS(E)     _AS(R)   _AS(T)          _AS(Y)      _AS(U)   _AS(I)       _AS(O)      _AS(P)        
      _AS(A)   _AS(S)   _AS(D)     _AS(F)   _AS(G)          _AS(H)      _AS(J)   _AS(K)       _AS(L)      _AS(SEMICOLON)
      _AS(Z)   _AS(X)   _AS(C)     _AS(V)   _AS(B)          _AS(N)      _AS(M)   _AS(COMMA)   _AS (DOT)   _AS(SLASH)    
                        &kp LALT   &mo 1    &kp SPACE       &kp SPACE   &mo 2    &kp RSHIFT                             
                        >;
                };

                left_layer {
                        display-name = "Left";
                        bindings = <
//        ┌──────────┬────────┬──────────┬────────────┬───────────┐   ┌──────────────────┬────────────────┬─────────────────┬──────────────────┬───────────────────┐
//        │ &kp EXCL │ &kp AT │ &kp HASH │ &kp DOLLAR │ &kp PRCNT │   │    &kp CARET     │    &kp AMPS    │ &kp KP_MULTIPLY │     &kp LPAR     │     &kp RPAR      │
//        ├──────────┼────────┼──────────┼────────────┼───────────┤   ├──────────────────┼────────────────┼─────────────────┼──────────────────┼───────────────────┤
//        │  &trans  │ &trans │  &trans  │   &trans   │  &trans   │   │ &kp SINGLE_QUOTE │   &kp MINUS    │    &kp PLUS     │  &kp LEFT_BRACE  │  &kp RIGHT_BRACE  │
//        ├──────────┼────────┼──────────┼────────────┼───────────┤   ├──────────────────┼────────────────┼─────────────────┼──────────────────┼───────────────────┤
//        │  &trans  │ &trans │  &trans  │   &trans   │  &trans   │   │ &kp DOUBLE_QUOTE │ &kp UNDERSCORE │    &kp EQUAL    │ &kp LEFT_BRACKET │ &kp RIGHT_BRACKET │
//        └──────────┴────────┼──────────┼────────────┼───────────┤   ├──────────────────┼────────────────┼─────────────────┼──────────────────┴───────────────────┘
//                            │  &trans  │   &trans   │ &kp SPACE │   │    &kp SPACE     │     &mo 3      │     &kp TAB     │                                       
//                            └──────────┴────────────┴───────────┘   └──────────────────┴────────────────┴─────────────────┘                                       
      &kp EXCL   &kp AT   &kp HASH   &kp DOLLAR   &kp PRCNT       &kp CARET          &kp AMPS         &kp KP_MULTIPLY   &kp LPAR           &kp RPAR         
      &trans     &trans   &trans     &trans       &trans          &kp SINGLE_QUOTE   &kp MINUS        &kp PLUS          &kp LEFT_BRACE     &kp RIGHT_BRACE  
      &trans     &trans   &trans     &trans       &trans          &kp DOUBLE_QUOTES  &kp UNDERSCORE   &kp EQUAL         &kp LEFT_BRACKET   &kp RIGHT_BRACKET
                          &trans     &trans       &trans       &trans          &trans &trans                                                
                        >;
                };

                right_layer {
                        display-name = "Right";
                        bindings = <
//        ┌────────┬────────┬──────────┬──────────┬───────────┐   ┌───────────┬───────────────────┬───────────────────┬───────────┬───────────┐
//        │ &kp N1 │ &kp N2 │  &kp N3  │  &kp N4  │  &kp N5   │   │  &kp N6   │      &kp N7       │      &kp N8       │  &kp N9   │  &kp N0   │
//        ├────────┼────────┼──────────┼──────────┼───────────┤   ├───────────┼───────────────────┼───────────────────┼───────────┼───────────┤
//        │ &trans │ &trans │ &kp LBRC │ &kp LBKT │ &kp LPAR  │   │ &kp LEFT  │     &kp DOWN      │      &kp UP       │ &kp RIGHT │ _AS(BSLH) │
//        ├────────┼────────┼──────────┼──────────┼───────────┤   ├───────────┼───────────────────┼───────────────────┼───────────┼───────────┤
//        │ &trans │ &trans │  &trans  │  &trans  │ &kp COLON │   │ &kp SEMI  │ &kp C_VOLUME_DOWN │ &kp C_VOLUME_DOWN │  & trans  │  &trans   │
//        └────────┴────────┼──────────┼──────────┼───────────┤   ├───────────┼───────────────────┼───────────────────┼───────────┴───────────┘
//                          │  &trans  │  &mo 3   │ &kp SPACE │   │ &kp SPACE │      &trans       │      &kp TAB      │                        
//                          └──────────┴──────────┴───────────┘   └───────────┴───────────────────┴───────────────────┘                        
      &kp N1   &kp N2   &kp N3     &kp N4     &kp N5          &kp N6      &kp N7              &kp N8              &kp N9      &kp N0   
      &trans   &trans   &kp LBRC   &kp LBKT   &kp LPAR        &kp LEFT    &kp DOWN            &kp UP              &kp RIGHT   _AS(BSLH)
      &trans   &trans   &trans     &trans     &kp COLON       &kp SEMI    &kp C_VOLUME_DOWN   &kp C_VOLUME_DOWN   & trans     &trans   
                        &trans     &mo 3      &kp SPACE       &kp SPACE   &trans              &kp TAB                                  
                        >;
                };

                both_layer {
                        display-name = "Both";
                        bindings = <
//        ┌────────┬────────┬────────┬────────┬────────┐   ┌────────┬────────┬────────┬────────┬────────┐
//        │ &none  │ &none  │ &none  │ &none  │ &none  │   │ &none  │ &none  │ &none  │ &none  │ &none  │
//        ├────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┤
//        │ &none  │ &none  │ &none  │ &none  │ &none  │   │ &none  │ &none  │ &none  │ &none  │ &none  │
//        ├────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┤
//        │ &trans │ &trans │ &trans │ &trans │ &trans │   │ &trans │ &trans │ &trans │ &trans │ &trans │
//        └────────┴────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┴────────┘
//                          │ &trans │ &trans │ &trans │   │ &trans │ &trans │ &trans │                  
//                          └────────┴────────┴────────┘   └────────┴────────┴────────┘                  
      &none    &none    &none    &none    &none        &none    &none    &none    &none    &none 
      &none    &none    &none    &none    &none        &none    &none    &none    &none    &none 
      &trans   &trans   &trans   &trans   &trans       &trans   &trans   &trans   &trans   &trans
                        &trans   &trans   &trans       &trans   &trans   &trans                  
                        >;
                };




        };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_TAB{
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp ESC>;
        };
        combo_backspace{
            timeout-ms = <50>;
            require-prior-idle-ms=<50>;
            key-positions = <8 9>;
            bindings = <&kp BSPC>;
        };
        combo_return{
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp RET>;
        };
        combo_LCTRL{
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LCTRL>;
        };
        combo_RCTRL{
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp RCTRL>;
        };
    };
};
